---
const instruktioner = await Astro.glob("../../data/cms/instruktioner.md")
const markdown = instruktioner.map(md=>md.rawContent())
---

<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Content Manager</title>
</head>
<body>
    <div id="data" data-md={markdown}>
    </div>
    <script is:inline src="https://unpkg.com/@staticcms/app@^1.0.0/dist/static-cms-app.js"></script>
    <script is:inline defer>
      setTimeout(() => {
      const link = document.createElement('link')
        link.type = 'text/css'
        link.rel = 'stylesheet'
        link.href = '/admin/styles.css'
        document.head.appendChild(link)
      },2500)
    </script>

</body>
</html>



<script>
    // import CMS from '@staticcms/app'
    import config from '../../data/cms/config'
    import { faPalette,
            faUsersRectangle,
            faCog,
            faPager, 
            faSitemap, 
            faUserGroup, 
            faNewspaper, 
            faCode,
            faPersonChalkboard } from '@fortawesome/free-solid-svg-icons';
    import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
    import ReactMarkdown from 'react-markdown'
    const markdown = document.getElementById('data').dataset.md
    CMS.init({config});

    //Testade olika syntax, den tredje var ju enklast så använd den
    CMS.registerIcon('cog', function () {
        return h(FontAwesomeIcon, {icon: faCog, size: "lg"})
    })
    CMS.registerIcon('usergroup', () => {return h(FontAwesomeIcon, {icon: faUserGroup, size: 'lg'})})
    CMS.registerIcon('newspaper', ()=>h(FontAwesomeIcon, {icon: faNewspaper, size: 'lg'}))
    CMS.registerIcon('sitemap', ()=>h(FontAwesomeIcon, {icon: faSitemap, size: 'lg'}))
    CMS.registerIcon('code', ()=>h(FontAwesomeIcon, {icon: faCode, size: 'lg'}))
    CMS.registerIcon('userrectangle', ()=>h(FontAwesomeIcon, {icon: faUsersRectangle, size: 'lg'}))
    CMS.registerIcon('chalkboard', ()=>h(FontAwesomeIcon, {icon: faPersonChalkboard, size: 'lg'}))
    
    const GitLabIcon = () => {
      return h('img', {src: '/gitlab.png', height: '20', width: '20'})
      
    }
    const NetlifyIcon = () => h('img', {src: '/netlify.webp', height: '20', width: '20'})
    CMS.registerIcon('netlify', NetlifyIcon)
    CMS.registerIcon('gitlab', GitLabIcon)

    const CustomPage = () => {
      return h('div', {style: {height: '100%', width: '100%', paddingInline: '5px'}}, h(ReactMarkdown, {children: markdown}));
    };
    const Nyheter = () => h('div', {style: {
      position: 'absolute',
      height: '95%',
      width: '95%'
    }}, h('iframe', {src: 'https://sektionshemsidan.netlify.app/for-medlemmar/nyheter/', height: '100%', width: '100%'}))
    CMS.registerAdditionalLink({
      id: 'instruktioner',
      title: 'Instruktioner',
      data: CustomPage,
      options: {
        icon: 'chalkboard',
      },
    });
    CMS.registerAdditionalLink({
      id: 'gitlab',
      title: 'GitLab ↗',
      data: 'https://gitlab.liu.se/Kodvet/sektionshemsidan',
      options: {
        icon: 'gitlab'
      }
    })
    CMS.registerAdditionalLink({
      id: 'netlify',
      title: 'Netlify ↗',
      data: 'https://app.netlify.com/teams/webbgruppen-kogvet/overview',
      options: {
        icon: 'netlify'
      }
    })


    CMS.registerPreviewTemplate('nyheter', Nyheter)
    console.log(config)

    const PostPreviewCard = ({ entry, widgetFor, viewStyle }) => {
  return h(
    'div',
    { style: { width: '100%' } },
    viewStyle === 'grid' ? widgetFor('image') : null,
    h(
      'div',
      { style: { padding: '16px', width: '100%' } },
      h(
        'div',
        {
          style: {
            display: 'flex',
            width: '100%',
            justifyContent: 'space-between',
            alignItems: 'center',
          },
        },
        h(
          'div',
          {
            style: {
              display: 'flex',
              flexDirection: viewStyle === 'grid' ? 'column' : 'row',
              alignItems: 'center',
              gap: '38px',
              flexGrow: '1'
            },
          },
          h('strong', { style: { fontSize: '16px', width: '25%' } }, entry.data.title),
          h('span', { style: { fontSize: '16px', width: '25%' } }, entry.data.author.map((auth, index) => h('span', {}, entry.data.author[index + 1] ? auth + ',  ' : auth))),
          h('span', { style: { fontSize: '16px', width: '25%' } }, entry.data.date),
        ),
        h(
          'div',
          {
            style: {
              backgroundColor: entry.data.draft === true ? 'grey' : 'green',
              color: 'white',
              border: 'none',
              padding: '4px 8px',
              textAlign: 'center',
              textDecoration: 'none',
              display: 'inline-block',
              cursor: 'pointer',
              borderRadius: '4px',
              fontStyle: 'strong'
            },
          },
          entry.data.draft === true ? 'Utkast' : 'Publicerad',
        ),
      ),
    ),
  );
};

CMS.registerPreviewCard('nyheter', PostPreviewCard);
</script>
